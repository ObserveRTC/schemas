{
  "description": "A compound object holds a set of measurements belonging to a aspecific time",
  "type": "object",
  "properties": {
    "callId": {
      "description": "Optional. If the client is aware of the callId for some reason (generated while clients are joined to the same room) then the observer will use this id.\nOtherwise the observer matches the client and assign a callId in reports.",
      "type": "string"
    },
    "clientId": {
      "description": "The unique generated client id the report is generated from",
      "type": "string"
    },
    "sampleSeq": {
      "description": "The sequence number a source assigns to the sample. \nEvery time the source make a sample at a client \nthis number is monothonically incremented.",
      "type": "number"
    },
    "roomId": {
      "description": "The WebRTC app configured room id the client was at the call.\nIf it is configured, then every sample carries this information.",
      "type": "string"
    },
    "userId": {
      "description": "The WebRTC app configured user id of the client.\nIf it is configured, then every sample carries this information.",
      "type": "string"
    },
    "engine": {
      "description": "The engine",
      "items": {
        "type": "Engine"
      },
      "$ref": "#/definitions/Engine"
    },
    "platform": {
      "description": "The platform",
      "items": {
        "type": "Platform"
      },
      "$ref": "#/definitions/Platform"
    },
    "browser": {
      "description": "Details of the browser the client has",
      "items": {
        "type": "Browser"
      },
      "$ref": "#/definitions/Browser"
    },
    "os": {
      "description": "Details about the operation system the client has",
      "items": {
        "type": "OperationSystem"
      },
      "$ref": "#/definitions/OperationSystem"
    },
    "mediaConstraints": {
      "description": "List of the media constraints the client has\n\nOnly presented if any changes occurred in the client",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "mediaDevices": {
      "description": "List of the media devices the client has.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "userMediaErrors": {
      "description": "List of user media errors\n\nOnly presented if any changes occurred in the client",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "extensionStats": {
      "description": "List of the extension stats added by the webrtc app",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExtensionStat"
      }
    },
    "iceServers": {
      "description": "List of ICE server the client has\n\nOnly presented if any changes occurred in the client",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "pcTransports": {
      "description": "List of the peer connection transport object.",
      "items": {
        "$ref": "#/definitions/PeerConnectionTransport"
      },
      "type": "array"
    },
    "mediaSources": {
      "description": "A list of media sources a client uses.\nThis attribute only updates if there is a change in the list of source.\n\nOnly presented if any changes occurred in the client",
      "items": {
        "$ref": "#/definitions/MediaSourceStat"
      },
      "type": "array"
    },
    "codecs": {
      "description": "List of codec the client has\n\nOnly presented if any changes occurred in the client",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Codec"
      }
    },
    "certificates": {
      "description": "The certificates the client provided\n\nOnly presented if any changes occurred in the client",
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "type": "array"
    },
    "inboundAudioTracks": {
      "description": "The inbound audio track statistics",
      "items": {
        "$ref": "#/definitions/InboundAudioTrack"
      },
      "type": "array"
    },
    "inboundVideoTracks": {
      "description": "The inbound video track statistics",
      "items": {
        "$ref": "#/definitions/InboundVideoTrack"
      },
      "type": "array"
    },
    "outboundAudioTracks": {
      "description": "The outbound audio track statistics",
      "items": {
        "$ref": "#/definitions/OutboundAudioTrack"
      },
      "type": "array"
    },
    "outboundVideoTracks": {
      "description": "The outbound video track statistics",
      "items": {
        "$ref": "#/definitions/OutboundVideoTrack"
      },
      "type": "array"
    },
    "iceLocalCandidates": {
      "description": "Local ICE candidates\n\nOnly presented if any changes occurred in the client",
      "items": {
        "$ref": "#/definitions/ICELocalCandidate"
      },
      "type": "array"
    },
    "iceRemoteCandidates": {
      "description": "Remote ICE candidates\n\nOnly presented if any changes occurred in the client",
      "items": {
        "$ref": "#/definitions/ICERemoteCandidate"
      },
      "type": "array"
    },
    "dataChannels": {
      "description": "Data channels",
      "items": {
        "$ref": "#/definitions/DataChannel"
      },
      "type": "array"
    },
    "timestamp": {
      "description": "The timestamp when the sample is created",
      "type": "number"
    },
    "timeZoneOffsetInHours": {
      "description": "The client app running offsets from GMT in hours",
      "type": "number"
    },
    "marker": {
      "description": "A sample marker indicate an additional information from the app",
      "type": "string"
    }
  },
  "required": [
    "clientId",
    "timestamp"
  ],
  "definitions": {
    "Engine": {
      "description": "Engine",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of",
          "type": "string"
        },
        "version": {
          "description": "The version of",
          "type": "string"
        }
      }
    },
    "Platform": {
      "description": "Platform infromation",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the platform",
          "type": "string"
        },
        "vendor": {
          "description": "The vendor of the platform",
          "type": "string"
        },
        "model": {
          "description": "The model of the platform",
          "type": "string"
        }
      }
    },
    "Browser": {
      "description": "Browser infromation",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the browser",
          "type": "string"
        },
        "version": {
          "description": "The version of",
          "type": "string"
        }
      }
    },
    "OperationSystem": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation system.",
          "type": "string"
        },
        "version": {
          "description": "The version number of the operation system",
          "type": "string"
        },
        "versionName": {
          "description": "The version name of the operation system",
          "type": "string"
        }
      }
    },
    "ExtensionStat": {
      "description": "The ExtensionStat class is a custom defined payload, and type pair, which sent to the endpoint with the intention of landing in the backend database without any transformation",
      "type": "object",
      "properties": {
        "extensionType": {
          "description": "The custom defined type of the extension",
          "type": "string"
        },
        "payload": {
          "description": "The payload of the extension",
          "type": "string"
        }
      }
    },
    "PeerConnectionTransport": {
      "description": "A compounded object built up by using \n * RTCTransportStats\n * RTCSctpTransportStats\n * RTCIceCandidateStats\n * RTCIceCandidatePairStats\n * RTCCertificateStats\n\nfrom https://www.w3.org/TR/webrtc-stats/",
      "type": "object",
      "properties": {
        "peerConnectionId": {
          "description": "The unique generated id for the peer connection",
          "type": "string"
        },
        "label": {
          "description": "The webrtc app provided label to the peer connection",
          "type": "string"
        },
        "dataChannelsOpened": {
          "description": "Represents the number of unique RTCDataChannels that have entered the \"open\" state during their lifetime.",
          "type": "number"
        },
        "dataChannelsClosed": {
          "description": "Represents the number of unique RTCDataChannels that had the \"open\" state, but now they are \"closed\"",
          "type": "number"
        },
        "dataChannelsRequested": {
          "description": "Represents the number of unique RTCDataChannels successfully requested from RTCPeerConnection.",
          "type": "number"
        },
        "dataChannelsAccepted": {
          "description": "Represents the number of unique RTCDataChannels signaled in a ondatachannel event on the RTCPeerConnection.",
          "type": "number"
        },
        "packetsSent": {
          "description": "Represents the total number of packets sent over this transport.",
          "type": "number"
        },
        "packetsReceived": {
          "description": "Represents the total number of packets received on this transport.",
          "type": "number"
        },
        "bytesSent": {
          "description": "Represents the total number of payload bytes sent on this RTCIceTransport, i.e., not including headers, padding or ICE connectivity checks.",
          "type": "number"
        },
        "bytesReceived": {
          "description": "Represents the total number of payload bytes received on this RTCIceTransport, i.e., not including headers, padding or ICE connectivity checks.",
          "type": "number"
        },
        "iceRole": {
          "description": "Set to the current value of the role attribute of the underlying RTCDtlsTransport.iceTransport.",
          "type": "string"
        },
        "iceLocalUsernameFragment": {
          "description": "Set to the current value of the local username fragment used in message validation procedures",
          "type": "number"
        },
        "dtlsState": {
          "description": "Set to the current value of the state attribute of the underlying RTCDtlsTransport.",
          "type": "string"
        },
        "iceState": {
          "description": "Set to the current value of the state attribute of the underlying RTCIceTransport.",
          "type": "string"
        },
        "selectedCandidatePairId": {
          "description": "It is a unique identifier that is associated to the object that was inspected to produce the RTCIceCandidatePairStats associated with this transport.",
          "type": "string"
        },
        "localCertificateId": {
          "description": "For components where DTLS is negotiated, give local certificate.",
          "type": "string"
        },
        "remoteCertificateId": {
          "description": "For components where DTLS is negotiated, give remote certificate.",
          "type": "string"
        },
        "tlsVersion": {
          "description": "The tls version of the peer connection when the DTLS negotiation is complete",
          "type": "string"
        },
        "dtlsCipher": {
          "description": "Descriptive name of the cipher suite used for the DTLS transport, as defined in the \"Description\" column of the IANA cipher suite registry",
          "type": "string"
        },
        "srtpCipher": {
          "description": "Descriptive name of the protection profile used for the SRTP transport, as defined in the \"Profile\" column of the IANA DTLS-SRTP protection profile registry",
          "type": "string"
        },
        "tlsGroup": {
          "description": "Descriptive name of the group used for the encryption, as defined in the \"Description\" column of the IANA TLS Supported Groups registry",
          "type": "string"
        },
        "selectedCandidatePairChanges": {
          "description": "The number of times that the selected candidate pair of this transport has changed. Going from not having a selected candidate pair to having a selected candidate pair, or the other way around, also increases this counter. It is initially zero and becomes one when an initial candidate pair is selected.",
          "type": "string"
        },
        "sctpSmoothedRoundTripTime": {
          "description": "The latest smoothed round-trip time value, corresponding to spinfo_srtt defined in [RFC6458] but converted to seconds. If there has been no round-trip time measurements yet, this value is undefined.",
          "type": "number"
        },
        "sctpCongestionWindow": {
          "description": "The latest congestion window, corresponding to spinfo_cwnd defined in [RFC6458].",
          "type": "number"
        },
        "sctpReceiverWindow": {
          "description": "The latest receiver window, corresponding to sstat_rwnd defined in [RFC6458].",
          "type": "number"
        },
        "sctpMtu": {
          "description": "The latest maximum transmission unit, corresponding to spinfo_mtu defined in [RFC6458].",
          "type": "number"
        },
        "sctpUnackData": {
          "description": "The number of unacknowledged DATA chunks, corresponding to sstat_unackdata defined in [RFC6458].",
          "type": "number"
        },
        "candidatePairState": {
          "description": "The state of ICE Candidate used for the peer connection",
          "type": "string"
        },
        "candidatePairPacketsSent": {
          "description": "The total number of packets sent on the peer connection using the selected candidate pair.",
          "type": "number"
        },
        "candidatePairPacketsReceived": {
          "description": "The total number of packets received on the peer connection using the selected candidate pair.",
          "type": "number"
        },
        "candidatePairBytesSent": {
          "description": "The total number of payload bytes sent on the peer connection using the selected candidate pair.",
          "type": "number"
        },
        "candidatePairBytesReceived": {
          "description": "The total number of payload bytes received on the peer connection using the selected candidate pair.",
          "type": "number"
        },
        "candidatePairLastPacketSentTimestamp": {
          "description": "The timestamp of the last sent packet on the peer connection using the selected ICE Candidate pair.",
          "type": "number"
        },
        "candidatePairLastPacketReceivedTimestamp": {
          "description": "The timestamp of the last received packet on the peer connection using the selected ICE Candidate pair.",
          "type": "number"
        },
        "candidatePairFirstRequestTimestamp": {
          "description": "The timestamp of the first request sent on the peer connection to select a candidate pair",
          "type": "number"
        },
        "candidatePairLastRequestTimestamp": {
          "description": "The timestamp of the last request sent on the peer connection to select a candidate pair",
          "type": "number"
        },
        "candidatePairLastResponseTimestamp": {
          "description": "The timestamp of the last response received on tthe peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairTotalRoundTripTime": {
          "description": "the sum of all round trip time measurements in seconds reported by STUN packet using the selected candidate pair on the peer connection",
          "type": "number"
        },
        "candidatePairCurrentRoundTripTime": {
          "description": "The latest round trip time calculated from STUN connectivity checks",
          "type": "number"
        },
        "candidatePairAvailableOutgoingBitrate": {
          "description": "Reported by the underlying congestion control algorithm on this peer connection using the selected ICE candidate pair",
          "type": "number"
        },
        "candidatePairAvailableIncomingBitrate": {
          "description": "Reported by the underlying congestion control algorithm on this peer connection using the selected ICE candidate pair",
          "type": "number"
        },
        "candidatePairCircuitBreakerTriggerCount": {
          "description": "The total number of circuit breaker condition happened on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairRequestsReceived": {
          "description": "The total number of requests received for connectivity check on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairRequestsSent": {
          "description": "The total number of requests sent for connectivity check on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairResponsesReceived": {
          "description": "The total number of responses received for connectivity check on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairResponsesSent": {
          "description": "The total number of responses sent for connectivity check on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairRetransmissionReceived": {
          "description": "The total number of retransmission received on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairRetransmissionSent": {
          "description": "The total number of retransmission sent on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairConsentRequestsSent": {
          "description": "The total number of consent requests sent on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairConsentExpiredTimestamp": {
          "description": "The total number of consent expired on the peer connection using the selected ice candidate pair",
          "type": "number"
        },
        "candidatePairPacketsDiscardedOnSend": {
          "description": "The total number packet discarded before sending on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairBytesDiscardedOnSend": {
          "description": "The total number bytes discarded before sending on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairRequestBytesSent": {
          "description": "The total number bytes sent as a request on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairConsentRequestBytesSent": {
          "description": "The total number bytes sent in consent packets on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "candidatePairResponseBytesSent": {
          "description": "The total number bytes sent as response packets on the peer connection using the selected candidate pair",
          "type": "number"
        },
        "localAddress": {
          "description": "The local address of the ICE candidate at the local endpoint (IPv4, IPv6, FQDN)",
          "type": "string"
        },
        "localPort": {
          "description": "The port number used by the local ICE candidate for connectivity\n\nPossible values: UDP, TCP",
          "type": "number"
        },
        "localProtocol": {
          "description": "The protocol used by the local ICE candidate for connectivity",
          "type": "string"
        },
        "localCandidateType": {
          "description": "The type of the candidate used for communication.\n\nPossible values: host, srflx, prflx, relay",
          "type": "string"
        },
        "localRelayProtocol": {
          "description": "It is the protocol used by the endpoint to communicate with the TURN server.\n\nPossible values: UDP, TCP, TLS",
          "type": "string"
        },
        "localCandidateICEServerUrl": {
          "description": "The url of the ICE server used by the \nlocal endpoint on the corresponded transport",
          "type": "string"
        },
        "remoteAddress": {
          "description": "The local address of the ICE candidate at the remote endpoint (IPv4, IPv6, FQDN)",
          "type": "string"
        },
        "remotePort": {
          "description": "The port number used by the remote ICE candidate for connectivity\n\nPossible values: UDP, TCP",
          "type": "number"
        },
        "remoteProtocol": {
          "description": "The protocol used by the remote ICE candidate for connectivity",
          "type": "string"
        },
        "remoteCandidateType": {
          "description": "The type of the remote candidate used for communication.\n\nPossible values: host, srflx, prflx, relay",
          "type": "string"
        },
        "remoteCandidateICEServerUrl": {
          "description": "The url of the ICE server used by the \nremote endpoint on the corresponded transport",
          "type": "string"
        },
        "remoteRelayProtocol": {
          "description": "It is the protocol used by the remote endpoint to communicate with the TURN server.\n\nPossible values: UDP, TCP, TLS",
          "type": "string"
        },
        "sentMediaPackets": {
          "description": "Client calculated metric.\nThe total number of media packets sent by all tracks using the peer connection.\n\nNote: Take care of the fact that tracks are attached and detached significantly changing the value of this field",
          "type": "number"
        },
        "receivedMediaPackets": {
          "description": "Client calculated metric.\nThe total number of media packets received by all tracks using the peer connection.\n\nNote: Take care of the fact that tracks are attached and detached significantly changing the value of this field",
          "type": "number"
        },
        "lostMediaPackets": {
          "description": "Client calculated metric.\nThe total number of media packets lost by all tracks using the peer connection.\n\nNote: Take care of the fact that tracks are attached and detached significantly changing the value of this field",
          "type": "number"
        },
        "videoRttAvg": {
          "description": "Client calculated metric.\nA smoothed average value calculated by averaging all of the video tracks sent on the peer connection",
          "type": "number"
        },
        "audioRttAvg": {
          "description": "Client calculated metric.\nA smoothed average value calculated by averaging all of the audio tracks sent on the peer connection",
          "type": "number"
        }
      }
    },
    "MediaSourceStat": {
      "description": "Represents the WebRTC Stats defined [RTCMediaSourceStats](https://www.w3.org/TR/webrtc-stats/#dom-rtcmediasourcestats)\n\nNOTE: This name is postfixed with \"stat\" in order to avoid collision of the MediaSource name part of the standard library and picked up by the schema transpiler",
      "type": "object",
      "properties": {
        "trackIdentifier": {
          "description": "The unique generated identifier the corresponded track has",
          "type": "string"
        },
        "kind": {
          "description": "The type of the media the Mediasource produces.\n\nPossible values are: \"audio\", \"video\"",
          "type": "string"
        },
        "relayedSource": {
          "description": "Flag indicating if the media source is relayed or not, meaning the local endpoint is not the actual source of the media, but a proxy for that media.",
          "type": "string"
        },
        "audioLevel": {
          "description": "the audio level of the media source.",
          "type": "number"
        },
        "totalAudioEnergy": {
          "description": "The audio energy of the media source\n\nFor calculation see https://www.w3.org/TR/webrtc-stats/#dom-rtcaudiosourcestats-totalaudioenergy",
          "type": "number"
        },
        "totalSamplesDuration": {
          "description": "The duration of the audio type media source",
          "type": "number"
        },
        "echoReturnLoss": {
          "description": "if echo cancellation is applied on the media source, then \nthis number represents the loss calculation defined in https://www.itu.int/rec/T-REC-G.168-201504-I/en",
          "type": "number"
        },
        "echoReturnLossEnhancement": {
          "description": "similar to the echo return loss calculation",
          "type": "number"
        },
        "width": {
          "description": "The width, in pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "height": {
          "description": "The height, in pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "bitDepth": {
          "description": "The bit depth per pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "frames": {
          "description": "The total number of frames originated from the media source",
          "type": "number"
        },
        "framesPerSecond": {
          "description": "The number of frames origianted from the media source in the last second",
          "type": "number"
        }
      }
    },
    "Codec": {
      "description": "The Media Codec the client uses to encode / decode certain media\n\nFields related to [RTCCodecStats](https://www.w3.org/TR/webrtc-stats/#dom-rtccodecstats)",
      "type": "object",
      "properties": {
        "payloadType": {
          "description": "Payload type used in RTP encoding / decoding process.",
          "type": "string"
        },
        "codecType": {
          "description": "Either \"encode\", or \"decode\" depending on the role the codec plays in the client",
          "type": "string"
        },
        "transportId": {
          "description": "the unique identifier for the peer connection transport",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the media. eg.: audio/opus",
          "type": "string"
        },
        "clockRate": {
          "description": "the clock rate used in RTP transport to generate the timestamp for the carried frames",
          "type": "number"
        },
        "channels": {
          "description": "Audio Only. Represnts the number of chanels an audio media source have. Only interesting if stereo is presented",
          "type": "number"
        },
        "sdpFmtpLine": {
          "description": "The SDP line determines the codec",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "The peer connection id the codec is related to",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "description": "Information about a certificate used by the ICE pair on peer connection",
      "type": "object",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the certificate",
          "type": "string"
        },
        "fingerprintAlgorithm": {
          "description": "The hash function used to generate the fingerprint",
          "type": "string"
        },
        "base64Certificate": {
          "description": "The DER encoded base-64 representation of the certificate.",
          "type": "string"
        },
        "issuerCertificateId": {
          "description": "The id of the next certificate in the certificate chain",
          "type": "string"
        }
      }
    },
    "InboundAudioTrack": {
      "description": "A combination of InboundRTPStat, RemoteInboundRTPStat, Receiver, and Codec webrtc stat standard exposed object at the client specific for audio tracks",
      "type": "object",
      "properties": {
        "ssrc": {
          "description": "The SSRC identifier of the corresponded RTP stream.",
          "type": "number"
        },
        "packetsReceived": {
          "description": "The total number of packets received on the corresponded RTP stream,",
          "type": "number"
        },
        "packetsLost": {
          "description": "The total number of packets lost on the corresponded RTP stream",
          "type": "number"
        },
        "jitter": {
          "description": "The last RR reported jitter on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscarded": {
          "description": "The total number of discarded packets on the corresponded RTP stream.",
          "type": "number"
        },
        "packetsRepaired": {
          "description": "The total number of packets repaired by either retransmission or FEC on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsLost": {
          "description": "The number of packets lost in burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsDiscarded": {
          "description": "The total number of packets discarded during a burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossCount": {
          "description": "The total number of burst lost happened on the coerresponded RTP stream",
          "type": "number"
        },
        "burstDiscardCount": {
          "description": "The number of burst discards happened on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossRate": {
          "description": "The loss rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstDiscardRate": {
          "description": "The discard rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapLossRate": {
          "description": "The loss rate during a gap period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapDiscardRate": {
          "description": "The discard rate during a gap period on the corresponded RTP stream",
          "type": "number"
        },
        "voiceActivityFlag": {
          "description": "The RTP header V flag indicate of the activity of the media source by the media codec if the RTP transport ships it through",
          "type": "boolean"
        },
        "lastPacketReceivedTimestamp": {
          "description": "The RTP timestamp of the last received packet on the corresponded RTP stream",
          "type": "number"
        },
        "averageRtcpInterval": {
          "description": "The RTCP average interval of sending compound RTCP reports",
          "type": "number"
        },
        "headerBytesReceived": {
          "description": "The total amount of header bytes received on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsReceived": {
          "description": "The total number of FEC packets received on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsDiscarded": {
          "description": "The total number of FEC packets discafrded on the corresponded RTP stream.",
          "type": "number"
        },
        "bytesReceived": {
          "description": "The total amount of payload bytes received on the corresponded RTP stream",
          "type": "number"
        },
        "packetsFailedDecryption": {
          "description": "The total number of packets failed to be decrypted on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDuplicated": {
          "description": "The total number of duplicated packets appeared on the corresponded RTP stream.",
          "type": "number"
        },
        "perDscpPacketsReceived": {
          "description": "The ratio of the DSCP packets on the corresponded RTP straem",
          "type": "number"
        },
        "nackCount": {
          "description": "The total number of negative acknowledgement received on the corresponded RTP stream",
          "type": "number"
        },
        "totalProcessingDelay": {
          "description": "The total processing delay of the RTP packets from the moment they received until the moment the jitter buffer emits them on the corresponded RTP strema.",
          "type": "number"
        },
        "estimatedPlayoutTimestamp": {
          "description": "The estimated timestamp of the jitterbuffer emits the RTP packets on the corresponded RTP stream.",
          "type": "number"
        },
        "jitterBufferDelay": {
          "description": "The total delay encountered by the jitter buffer for the RTP stream to allevaite the effect of jitter on the transport.",
          "type": "number"
        },
        "jitterBufferEmittedCount": {
          "description": "The total number of emits happened for the corresponded RTP stream",
          "type": "number"
        },
        "totalSamplesReceived": {
          "description": "The total number of audio samples received on the corresponded RTP stream",
          "type": "number"
        },
        "totalSamplesDecoded": {
          "description": "The total number of samples decoded on the corresponded RTP stream",
          "type": "number"
        },
        "samplesDecodedWithSilk": {
          "description": "The total number of samples decoded with SILK on the corresponded RTP stream",
          "type": "number"
        },
        "samplesDecodedWithCelt": {
          "description": "The total number of samples decodedd with CELT on the corresponded RTP stream",
          "type": "number"
        },
        "concealedSamples": {
          "description": "The total number of samples decoded by the media decoder from the corresponded RTP stream",
          "type": "number"
        },
        "silentConcealedSamples": {
          "description": "The total number of samples concealed from the corresponded RTP stream",
          "type": "number"
        },
        "concealmentEvents": {
          "description": "The total number of concealed event emitted to the media codec by the corresponded jitterbuffer",
          "type": "number"
        },
        "insertedSamplesForDeceleration": {
          "description": "The total number of samples inserted to decelarete the audio playout (happens when the jitterbuffer detects a shrinking buffer and need to increase the jitter buffer delay)",
          "type": "number"
        },
        "removedSamplesForAcceleration": {
          "description": "The total number of samples inserted to accelerate the audio playout (happens when the jitterbuffer detects a growing buffer and need to shrink the jitter buffer delay)",
          "type": "number"
        },
        "audioLevel": {
          "description": "The level of audio played out from the corresponded RTP stream",
          "type": "number"
        },
        "totalAudioEnergy": {
          "description": "the sum of level of energy of the microphone of the audio of the remote media source",
          "type": "number"
        },
        "totalSamplesDuration": {
          "description": "The total duration of the effective samples of the audio source",
          "type": "number"
        },
        "decoderImplementation": {
          "description": "The library implements the decoder for the media source",
          "type": "string"
        },
        "packetsSent": {
          "description": "The total number of packets sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "bytesSent": {
          "description": "The total amount of bytes sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "remoteTimestamp": {
          "description": "The remote timestamp of the RTCP packets reported in the SR",
          "type": "number"
        },
        "reportsSent": {
          "description": "The total number of SR reports sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTime": {
          "description": "Estimated round trip time for the SR reports based on DLRR reports on the corresponded RTP stream",
          "type": "number"
        },
        "totalRoundTripTime": {
          "description": "Represents the cumulative sum of all round trip time measurements performed on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTimeMeasurements": {
          "description": "Represents the total number of SR reports received with DLRR reports to be able to calculate the round trip time on the corresponded RTP stream",
          "type": "number"
        },
        "ended": {
          "description": "Flag indicate if the MediaTrack has been eded or not",
          "type": "boolean"
        },
        "payloadType": {
          "description": "The type of the payload the RTP stream carries",
          "type": "string"
        },
        "codecType": {
          "description": "The type of the codec role inthe endpoint.\n\nPossible values are: \"audio\", and \"video\"",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the media codec",
          "type": "string"
        },
        "clockRate": {
          "description": "the clock rate of the media source generates samples or frames",
          "type": "number"
        },
        "channels": {
          "description": "The number of channels the media source has.",
          "type": "number"
        },
        "sdpFmtpLine": {
          "description": "The corresponded SDP line in SDP negotiation",
          "type": "string"
        },
        "trackId": {
          "description": "The identifier of the MediaTrack the client plays the audio out",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "The unique generated identifier of the peer connection the inbound audio track belongs to",
          "type": "string"
        },
        "remoteClientId": {
          "description": "The remote clientId the source outbound track belongs to",
          "type": "string"
        },
        "rtpStreamId": {
          "description": "A unique identifier (UUID) for the RTP stream the media content is sent. Typically if a client is joined to an SFU this can be identical to the id the SFU uses to (publish/subscribe, produce/consume, ...) media",
          "type": "string"
        }
      }
    },
    "InboundVideoTrack": {
      "description": "A compound stat object used by the client giving information about a video track \nused by the client as inbound",
      "type": "object",
      "properties": {
        "ssrc": {
          "description": "The SSRC identifier of the corresponded RTP stream.",
          "type": "number"
        },
        "packetsReceived": {
          "description": "The total number of packets received on the corresponded RTP stream,",
          "type": "number"
        },
        "packetsLost": {
          "description": "The total number of packets lost on the corresponded RTP stream",
          "type": "number"
        },
        "jitter": {
          "description": "The last RR reported jitter on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscarded": {
          "description": "The total number of discarded packets on the corresponded RTP stream.",
          "type": "number"
        },
        "packetsRepaired": {
          "description": "The total number of packets repaired by either retransmission or FEC on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsLost": {
          "description": "The number of packets lost in burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsDiscarded": {
          "description": "The total number of packets discarded during a burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossCount": {
          "description": "The total number of burst lost happened on the coerresponded RTP stream",
          "type": "number"
        },
        "burstDiscardCount": {
          "description": "The number of burst discards happened on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossRate": {
          "description": "The loss rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstDiscardRate": {
          "description": "The discard rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapLossRate": {
          "description": "The loss rate during a gap period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapDiscardRate": {
          "description": "The discard rate during a gap period on the corresponded RTP stream",
          "type": "number"
        },
        "framesDropped": {
          "description": "The total number of frames dropped on the corresponded RTP stream",
          "type": "number"
        },
        "partialFramesLost": {
          "description": "The total number of frames partially lost on the corresponded RTP stream",
          "type": "number"
        },
        "fullFramesLost": {
          "description": "The total number of frames fully lost on the corresponded RTP stream",
          "type": "number"
        },
        "framesDecoded": {
          "description": "The total number of frames decoded on the corresponded RTP stream",
          "type": "number"
        },
        "keyFramesDecoded": {
          "description": "The total number of keyframes decoded on the corresponded RTP stream",
          "type": "number"
        },
        "frameWidth": {
          "description": "The width of the frame of the video sent by the remote source on the corresponded RTP stream",
          "type": "number"
        },
        "frameHeight": {
          "description": "The height of the frame of the video sent by the remote source on the corresponded RTP stream",
          "type": "number"
        },
        "frameBitDepth": {
          "description": "The bit depth in pixels of the frame of the video sent by the remote source on the corresponded RTP stream",
          "type": "number"
        },
        "framesPerSecond": {
          "description": "The frame per seconds of the video sent by the remote source on the corresponded RTP stream",
          "type": "number"
        },
        "qpSum": {
          "description": "The QP sum (only interested in VP8,9) of the frame of the video sent by the remote source on the corresponded RTP stream",
          "type": "number"
        },
        "totalDecodeTime": {
          "description": "The total tiem spent on decoding video on the corresponded RTP stream",
          "type": "number"
        },
        "totalInterFrameDelay": {
          "description": "The total interframe delay",
          "type": "number"
        },
        "totalSquaredInterFrameDelay": {
          "description": "The squere total of the interframe delay (together with teh interframe delay you can calculate the variance)",
          "type": "number"
        },
        "lastPacketReceivedTimestamp": {
          "description": "The RTP timestamp of the last received packet on the corresponded RTP stream",
          "type": "number"
        },
        "averageRtcpInterval": {
          "description": "The RTCP average interval of sending compound RTCP reports",
          "type": "number"
        },
        "headerBytesReceived": {
          "description": "The total amount of header bytes received on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsReceived": {
          "description": "The total number of FEC packets received on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsDiscarded": {
          "description": "The total number of FEC packets discafrded on the corresponded RTP stream.",
          "type": "number"
        },
        "bytesReceived": {
          "description": "The total amount of payload bytes received on the corresponded RTP stream",
          "type": "number"
        },
        "packetsFailedDecryption": {
          "description": "The total number of packets failed to be decrypted on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDuplicated": {
          "description": "The total number of duplicated packets appeared on the corresponded RTP stream.",
          "type": "number"
        },
        "perDscpPacketsReceived": {
          "description": "The ratio of the DSCP packets on the corresponded RTP straem",
          "type": "number"
        },
        "firCount": {
          "description": "The total number FIR packets sent from this endpoint to the source on the corresponded RTP stream",
          "type": "number"
        },
        "pliCount": {
          "description": "The total number of Picture Loss Indication sent on the corresponded RTP stream",
          "type": "number"
        },
        "nackCount": {
          "description": "The total number of negative acknowledgement received on the corresponded RTP stream",
          "type": "number"
        },
        "sliCount": {
          "description": "The total number of SLI indicator sent from the endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "totalProcessingDelay": {
          "description": "The total processing delay of the RTP packets from the moment they received until the moment the jitter buffer emits them on the corresponded RTP strema.",
          "type": "number"
        },
        "estimatedPlayoutTimestamp": {
          "description": "The estimated timestamp of the jitterbuffer emits the RTP packets on the corresponded RTP stream.",
          "type": "number"
        },
        "jitterBufferDelay": {
          "description": "The total delay encountered by the jitter buffer for the RTP stream to allevaite the effect of jitter on the transport.",
          "type": "number"
        },
        "jitterBufferEmittedCount": {
          "description": "The total number of emits happened for the corresponded RTP stream.",
          "type": "number"
        },
        "framesReceived": {
          "description": "The total number of frames received on the corresponded RTP stream.",
          "type": "number"
        },
        "decoderImplementation": {
          "description": "The library implements the decoder for the media source",
          "type": "string"
        },
        "packetsSent": {
          "description": "The total number of packets sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "bytesSent": {
          "description": "The total amount of bytes sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "remoteTimestamp": {
          "description": "The remote timestamp of the RTCP packets reported in the SR",
          "type": "number"
        },
        "reportsSent": {
          "description": "The total number of SR reports sent by the remote endpoint on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTime": {
          "description": "Estimated round trip time for the SR reports based on DLRR reports on the corresponded RTP stream",
          "type": "number"
        },
        "totalRoundTripTime": {
          "description": "Represents the cumulative sum of all round trip time measurements performed on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTimeMeasurements": {
          "description": "Represents the total number of SR reports received with DLRR reports to be able to calculate the round trip time on the corresponded RTP stream",
          "type": "number"
        },
        "ended": {
          "description": "Flag indicate if the MediaTrack has been eded or not",
          "type": "boolean"
        },
        "payloadType": {
          "description": "The type of the payload the RTP stream carries",
          "type": "string"
        },
        "codecType": {
          "description": "The type of the codec role inthe endpoint.\n\nPossible values are: \"audio\", and \"video\"",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the media codec",
          "type": "string"
        },
        "clockRate": {
          "description": "the clock rate of the media source generates samples or frames",
          "type": "number"
        },
        "sdpFmtpLine": {
          "description": "The corresponded SDP line in SDP negotiation",
          "type": "string"
        },
        "trackId": {
          "description": "The identifier of the MediaTrack the client plays the audio out",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "The unique generated identifier of the peer connection the inbound audio track belongs to",
          "type": "string"
        },
        "remoteClientId": {
          "description": "The remote clientId the source outbound track belongs to",
          "type": "string"
        },
        "rtpStreamId": {
          "description": "A unique identifier (UUID) for the RTP stream the media content is sent. Typically if a client is joined to an SFU this can be identical to the id the SFU uses to (publish/subscribe, produce/consume, ...) media",
          "type": "string"
        }
      }
    },
    "OutboundAudioTrack": {
      "description": "A compound object giving information about the audio track the client uses",
      "type": "object",
      "properties": {
        "ssrc": {
          "description": "The SSRC identifier of the corresponded RTP stream",
          "type": "number"
        },
        "packetsSent": {
          "description": "The total number of packets sent on the corresponded RTP stream",
          "type": "number"
        },
        "bytesSent": {
          "description": "The total amount of payload bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "rtxSsrc": {
          "description": "If RTX is negotiated as a separate stream, this is the SSRC of the RTX stream that is associated with this stream's ssrc.",
          "type": "number"
        },
        "rid": {
          "description": "The rid parameter of the corresponded RTP stream",
          "type": "string"
        },
        "lastPacketSentTimestamp": {
          "description": "The last RTP packet sent timestamp",
          "type": "number"
        },
        "headerBytesSent": {
          "description": "The total amount of header bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscardedOnSend": {
          "description": "The packets discarded at sending on the corresponded RTP stream",
          "type": "number"
        },
        "bytesDiscardedOnSend": {
          "description": "The bytes discarded at sending on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsSent": {
          "description": "The total number of FEC packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "retransmittedPacketsSent": {
          "description": "The total number of retransmitted packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "retransmittedBytesSent": {
          "description": "The total number of retransmitted bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "targetBitrate": {
          "description": "The media codec targeted bit rate",
          "type": "number"
        },
        "totalEncodedBytesTarget": {
          "description": "The total encoded bytes targeted by the media encoder. this is the sum of the encoded frames",
          "type": "number"
        },
        "totalSamplesSent": {
          "description": "The total number of samples the media source sent",
          "type": "number"
        },
        "samplesEncodedWithSilk": {
          "description": "The total number of samples encoded with SILK",
          "type": "number"
        },
        "samplesEncodedWithCelt": {
          "description": "The total number of samples encoded with CELT",
          "type": "number"
        },
        "voiceActivityFlag": {
          "description": "The media encoder voice activity flag shipped to teh RTP strem by adding a V flag indicator to the headers",
          "type": "number"
        },
        "totalPacketSendDelay": {
          "description": "The total amount of delay in seconds the packets subjected to wait before sending. This can be either because of a pace bufffer, or other enforced waiting.",
          "type": "number"
        },
        "averageRtcpInterval": {
          "description": "The average RTCP interval for SR compound packets",
          "type": "number"
        },
        "perDscpPacketsSent": {
          "description": "The ratio of the DSCP packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "nackCount": {
          "description": "The total number of negative acknowledgement sent on the corresponded RTP stream",
          "type": "number"
        },
        "encoderImplementation": {
          "description": "The libray name of the media encoder",
          "type": "string"
        },
        "packetsReceived": {
          "description": "The total number of packets received on the corresponded RTP stream,",
          "type": "number"
        },
        "packetsLost": {
          "description": "The total number of packets lost on the corresponded RTP stream",
          "type": "number"
        },
        "jitter": {
          "description": "The last RR reported jitter on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscarded": {
          "description": "The total number of discarded packets on the corresponded RTP stream.",
          "type": "number"
        },
        "packetsRepaired": {
          "description": "The total number of packets repaired by either retransmission or FEC on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsLost": {
          "description": "The number of packets lost in burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsDiscarded": {
          "description": "The total number of packets discarded during a burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossCount": {
          "description": "The total number of burst lost happened on the coerresponded RTP stream",
          "type": "number"
        },
        "burstDiscardCount": {
          "description": "The number of burst discards happened on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossRate": {
          "description": "The loss rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstDiscardRate": {
          "description": "The discard rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapLossRate": {
          "description": "The loss rate during a gap period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapDiscardRate": {
          "description": "The discard rate during a gap period on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTime": {
          "description": "The last RTT measurements based on the last SR-RR",
          "type": "number"
        },
        "totalRoundTripTime": {
          "description": "The total sum of the RTT measurements on the corresponded RTP stream",
          "type": "number"
        },
        "fractionLost": {
          "description": "The last RR reported fractional lost",
          "type": "number"
        },
        "reportsReceived": {
          "description": "The number of RR compound report received on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTimeMeasurements": {
          "description": "The number of RTT measurement calculated on the corresponded RTP stream",
          "type": "number"
        },
        "relayedSource": {
          "description": "Flag indicating if the media source is relayed or not, meaning the local endpoint is not the actual source of the media, but a proxy for that media.",
          "type": "string"
        },
        "audioLevel": {
          "description": "the audio level of the media source.",
          "type": "number"
        },
        "totalAudioEnergy": {
          "description": "The audio energy of the media source\n\nFor calculation see https://www.w3.org/TR/webrtc-stats/#dom-rtcaudiosourcestats-totalaudioenergy",
          "type": "number"
        },
        "totalSamplesDuration": {
          "description": "The duration of the audio type media source",
          "type": "number"
        },
        "echoReturnLoss": {
          "description": "if echo cancellation is applied on the media source, then \nthis number represents the loss calculation defined in https://www.itu.int/rec/T-REC-G.168-201504-I/en",
          "type": "number"
        },
        "echoReturnLossEnhancement": {
          "description": "similar to the echo return loss calculation",
          "type": "number"
        },
        "ended": {
          "description": "Flag indicate if the MediaTrack has been eded or not",
          "type": "boolean"
        },
        "payloadType": {
          "description": "The type of the payload the RTP stream carries",
          "type": "string"
        },
        "codecType": {
          "description": "The type of the codec role inthe endpoint.\n\nPossible values are: \"audio\", and \"video\"",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the media codec",
          "type": "string"
        },
        "clockRate": {
          "description": "the clock rate of the media source generates samples or frames",
          "type": "number"
        },
        "channels": {
          "description": "The number of channels the media source has.",
          "type": "number"
        },
        "sdpFmtpLine": {
          "description": "The corresponded SDP line in SDP negotiation",
          "type": "string"
        },
        "trackId": {
          "description": "The identifier of the MediaTrack the client plays the audio out",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "The unique generated identifier of the peer connection the inbound audio track belongs to",
          "type": "string"
        },
        "rtpStreamId": {
          "description": "A unique identifier (UUID) for the RTP stream the media content is sent. Typically if a client is joined to an SFU this can be identical to the id the SFU uses to (publish/subscribe, produce/consume, ...) media",
          "type": "string"
        }
      }
    },
    "OutboundVideoTrack": {
      "type": "object",
      "properties": {
        "ssrc": {
          "description": "The SSRC identifier of the corresponded RTP stream",
          "type": "number"
        },
        "packetsSent": {
          "description": "The total number of packets sent on the corresponded RTP stream",
          "type": "number"
        },
        "bytesSent": {
          "description": "The total amount of payload bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "rtxSsrc": {
          "description": "If RTX is negotiated as a separate stream, this is the SSRC of the RTX stream that is associated with this stream's ssrc.",
          "type": "number"
        },
        "rid": {
          "description": "The rid parameter of the corresponded RTP stream",
          "type": "string"
        },
        "lastPacketSentTimestamp": {
          "description": "The last RTP packet sent timestamp",
          "type": "number"
        },
        "headerBytesSent": {
          "description": "The total amount of header bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscardedOnSend": {
          "description": "The packets discarded at sending on the corresponded RTP stream",
          "type": "number"
        },
        "bytesDiscardedOnSend": {
          "description": "The bytes discarded at sending on the corresponded RTP stream.",
          "type": "number"
        },
        "fecPacketsSent": {
          "description": "The total number of FEC packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "retransmittedPacketsSent": {
          "description": "The total number of retransmitted packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "retransmittedBytesSent": {
          "description": "The total number of retransmitted bytes sent on the corresponded RTP stream",
          "type": "number"
        },
        "targetBitrate": {
          "description": "The media codec targeted bit rate",
          "type": "number"
        },
        "totalEncodedBytesTarget": {
          "description": "The total encoded bytes targeted by the media encoder. this is the sum of the encoded frames",
          "type": "number"
        },
        "frameWidth": {
          "description": "The frame width in pixels of the frames targeted by the media encoder",
          "type": "number"
        },
        "frameHeight": {
          "description": "The frame width the media encoder targeted",
          "type": "number"
        },
        "frameBitDepth": {
          "description": "The frame depth in pixles on the corresponded RTP stream",
          "type": "number"
        },
        "framesPerSecond": {
          "description": "The encoded number of frames in the last second on the corresponded media source",
          "type": "number"
        },
        "framesSent": {
          "description": "The total number of frames sent on the corresponded RTP stream",
          "type": "number"
        },
        "hugeFramesSent": {
          "description": "The total number of huge frames (avgFrameSize * 2.5) on the corresponded RTP stream",
          "type": "number"
        },
        "framesEncoded": {
          "description": "The total number of frames encoded by the media source",
          "type": "number"
        },
        "keyFramesEncoded": {
          "description": "The total number of keyframes encoded on the corresponded RTP stream",
          "type": "number"
        },
        "framesDiscardedOnSend": {
          "description": "The total number of frames discarded on the corresponded RTP stream.",
          "type": "number"
        },
        "qpSum": {
          "description": "The sum of the QP the media encoder provided on the corresponded RTP stream.",
          "type": "number"
        },
        "totalEncodeTime": {
          "description": "The total time in seconds spent in encoding media frames for the corresponded RTP stream.",
          "type": "number"
        },
        "totalPacketSendDelay": {
          "description": "The total amount of delay in seconds the packets subjected to wait before sending. This can be either because of a pace bufffer, or other enforced waiting.",
          "type": "number"
        },
        "averageRtcpInterval": {
          "description": "The average RTCP interval for SR compound packets",
          "type": "number"
        },
        "qualityLimitationDurationNone": {
          "description": "Time elapsed in seconds when the RTC connection has not limited the quality",
          "type": "number"
        },
        "qualityLimitationDurationCPU": {
          "description": "Time elapsed in seconds the RTC connection had a limitation because of CPU",
          "type": "number"
        },
        "qualityLimitationDurationBandwidth": {
          "description": "Time elapsed in seconds the RTC connection had a limitation because of Bandwidth",
          "type": "number"
        },
        "qualityLimitationDurationOther": {
          "description": "Time elapsed in seconds the RTC connection had a limitation because of Other factor",
          "type": "number"
        },
        "qualityLimitationReason": {
          "description": "Indicate a reason for the quality limitation of the corresponded synchronization source",
          "type": "string"
        },
        "qualityLimitationResolutionChanges": {
          "description": "The total number of resolution changes occured ont he corresponded RTP stream due to quality changes",
          "type": "number"
        },
        "perDscpPacketsSent": {
          "description": "The ratio of the DSCP packets sent on the corresponded RTP stream.",
          "type": "number"
        },
        "nackCount": {
          "description": "The total number of negative acknowledgement sent on the corresponded RTP stream",
          "type": "number"
        },
        "firCount": {
          "description": "The total number of FIR counted on the corresponded RTP stream",
          "type": "number"
        },
        "pliCount": {
          "description": "The total number of picture loss indication happeend on teh corresaponded mRTP stream",
          "type": "number"
        },
        "sliCount": {
          "description": "The total number of SLI occured on the corresponded RTP stream",
          "type": "number"
        },
        "encoderImplementation": {
          "description": "The libray name of the media encoder",
          "type": "string"
        },
        "packetsReceived": {
          "description": "The total number of packets received on the corresponded RTP stream,",
          "type": "number"
        },
        "packetsLost": {
          "description": "The total number of packets lost on the corresponded RTP stream",
          "type": "number"
        },
        "jitter": {
          "description": "The last RR reported jitter on the corresponded RTP stream",
          "type": "number"
        },
        "packetsDiscarded": {
          "description": "The total number of discarded packets on the corresponded RTP stream.",
          "type": "number"
        },
        "packetsRepaired": {
          "description": "The total number of packets repaired by either retransmission or FEC on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsLost": {
          "description": "The number of packets lost in burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstPacketsDiscarded": {
          "description": "The total number of packets discarded during a burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossCount": {
          "description": "The total number of burst lost happened on the coerresponded RTP stream",
          "type": "number"
        },
        "burstDiscardCount": {
          "description": "The number of burst discards happened on the corresponded RTP stream.",
          "type": "number"
        },
        "burstLossRate": {
          "description": "The loss rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "burstDiscardRate": {
          "description": "The discard rate during burst period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapLossRate": {
          "description": "The loss rate during a gap period on the corresponded RTP stream.",
          "type": "number"
        },
        "gapDiscardRate": {
          "description": "The discard rate during a gap period on the corresponded RTP stream",
          "type": "number"
        },
        "framesDropped": {
          "description": "The total number of frames reported to be lost by the remote endpoit on the corresponded RTP stream",
          "type": "number"
        },
        "partialFramesList": {
          "description": "The total number of partial frames reported to be lost by the remote endpoint on the corresponded RTP stream.",
          "type": "number"
        },
        "fullFramesList": {
          "description": "The total number of full frames lost at the remote endpoint on the corresponded RTP stream.",
          "type": "number"
        },
        "roundTripTime": {
          "description": "The last RTT measurements based on the last SR-RR",
          "type": "number"
        },
        "totalRoundTripTime": {
          "description": "The total sum of the RTT measurements on the corresponded RTP stream",
          "type": "number"
        },
        "fractionLost": {
          "description": "The last RR reported fractional lost",
          "type": "number"
        },
        "reportsReceived": {
          "description": "The number of RR compound report received on the corresponded RTP stream",
          "type": "number"
        },
        "roundTripTimeMeasurements": {
          "description": "The number of RTT measurement calculated on the corresponded RTP stream",
          "type": "number"
        },
        "relayedSource": {
          "description": "Flag indicating if the media source is relayed or not, meaning the local endpoint is not the actual source of the media, but a proxy for that media.",
          "type": "string"
        },
        "width": {
          "description": "The width, in pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "height": {
          "description": "The height, in pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "bitDepth": {
          "description": "The bit depth per pixels, of the last frame originating from the media source",
          "type": "number"
        },
        "frames": {
          "description": "The total number of frames originated from the media source",
          "type": "number"
        },
        "ended": {
          "description": "Flag indicate if the MediaTrack has been eded or not",
          "type": "boolean"
        },
        "payloadType": {
          "description": "The type of the payload the RTP stream carries",
          "type": "string"
        },
        "codecType": {
          "description": "The type of the codec role inthe endpoint.\n\nPossible values are: \"audio\", and \"video\"",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the media codec",
          "type": "string"
        },
        "clockRate": {
          "description": "the clock rate of the media source generates samples or frames",
          "type": "number"
        },
        "channels": {
          "description": "The number of channels the media source has.",
          "type": "number"
        },
        "sdpFmtpLine": {
          "description": "The corresponded SDP line in SDP negotiation",
          "type": "string"
        },
        "trackId": {
          "description": "The identifier of the MediaTrack the client plays the audio out",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "The unique generated identifier of the peer connection the inbound audio track belongs to",
          "type": "string"
        },
        "rtpStreamId": {
          "description": "A unique identifier (UUID) for the RTP stream the media content is sent. Typically if a client is joined to an SFU this can be identical to the id the SFU uses to (publish/subscribe, produce/consume, ...) media",
          "type": "string"
        }
      }
    },
    "ICELocalCandidate": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the local candidate",
          "type": "string"
        },
        "transportId": {
          "description": "The unique identifier of the transport the local candidate belongs to",
          "type": "string"
        },
        "address": {
          "description": "The address of the local endpoint (Ipv4, Ipv6, FQDN)",
          "type": "string"
        },
        "port": {
          "description": "The port number of the local endpoint the ICE uses",
          "type": "number"
        },
        "protocol": {
          "description": "The protocol for the ICE",
          "type": "string"
        },
        "candidateType": {
          "description": "The type of the local candidate",
          "type": "string"
        },
        "priority": {
          "description": "The priority of the local candidate",
          "type": "string"
        },
        "url": {
          "description": "The url of the ICE server",
          "type": "string"
        },
        "relayProtocol": {
          "description": "The relay protocol the local candidate uses",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "Refers to the peer connection the local candidate belongs to",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "ICERemoteCandidate": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the remote candidate",
          "type": "string"
        },
        "address": {
          "description": "The address of the remote endpoint (Ipv4, Ipv6, FQDN)",
          "type": "string"
        },
        "port": {
          "description": "The port number of the remote endpoint the ICE uses",
          "type": "number"
        },
        "protocol": {
          "description": "The protocol for the ICE",
          "type": "string"
        },
        "candidateType": {
          "description": "The type of the remote candidate",
          "type": "string"
        },
        "priority": {
          "description": "The priority of the remote candidate",
          "type": "string"
        },
        "url": {
          "description": "The url of the ICE server",
          "type": "string"
        },
        "relayProtocol": {
          "description": "The relay protocol the remote candidate uses",
          "type": "string"
        },
        "peerConnectionId": {
          "description": "Refers to the peer connection the remote candidate belongs to",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DataChannel": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the data channel",
          "type": "string"
        },
        "label": {
          "description": "The label the data channel provided at the creation",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol the data channel use to transfer data",
          "type": "string"
        },
        "dataChannelIdentifier": {
          "description": "The unique identifier of the data channel",
          "type": "string"
        },
        "state": {
          "description": "The state of the data channel",
          "type": "string"
        },
        "messagesSent": {
          "description": "The total number of messages sent on this data channel. this is not equal to the number of packets sent, as messages are chunked to packets",
          "type": "number"
        },
        "bytesSent": {
          "description": "The amount of bytes sent on the corresponded data channel",
          "type": "string"
        },
        "messagesReceived": {
          "description": "The number of messages received on the corresponded data channel",
          "type": "number"
        },
        "bytesReceived": {
          "description": "The total amount of bytes received on the corresponded data channel",
          "type": "number"
        },
        "peerConnectionId": {
          "description": "The unique generated identifier of the peer connection the data channel belongs to",
          "type": "string"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}