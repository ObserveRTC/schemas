const schemaName = "schema";
const tableName = "sfu_transport_report";
exports.up = function (knex) {
	return knex.schema.withSchema(schemaName).createTable(tableName, (table) => {
		table.string("serviceid", 255).notNull();
		table.string("mediaunitid", 255).notNull();
		table.specificType("sfuid", "CHAR(36)").notNull();
		table.timestamp("timestamp", { useTz: false }).notNull();
		table.specificType("transportid", "CHAR(36)").notNull();
		table.specificType("callid", "CHAR(36)");
		table.string("dtlsstate", 255);
		table.text("icerole");
		table.string("icestate", 255);
		table.boolean("internal");
		table.text("localaddress");
		table.integer("localport");
		table.text("marker");
		table.string("protocol", 255);
		table.text("remoteaddress");
		table.integer("remoteport");
		table.string("roomid", 255);
		table.bigInteger("rtpbytesreceived");
		table.bigInteger("rtpbytessent");
		table.integer("rtppacketslost");
		table.integer("rtppacketsreceived");
		table.integer("rtppacketssent");
		table.bigInteger("rtxbytesreceived");
		table.bigInteger("rtxbytessent");
		table.integer("rtxpacketsdiscarded");
		table.integer("rtxpacketslost");
		table.integer("rtxpacketsreceived");
		table.integer("rtxpacketssent");
		table.bigInteger("sctpbytesreceived");
		table.bigInteger("sctpbytessent");
		table.integer("sctppacketsreceived");
		table.integer("sctppacketssent");
		table.string("sctpstate", 255);
	});
};