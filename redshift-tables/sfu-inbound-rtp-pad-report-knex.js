const schemaName = "schema";
const tableName = "sfu_inbound_rtp_pad_report";
exports.up = function (knex) {
	return knex.schema.withSchema(schemaName).createTable(tableName, (table) => {
		table.string("serviceid", 255).notNull();
		table.string("mediaunitid", 255).notNull();
		table.specificType("sfuid", "CHAR(36)").notNull();
		table.timestamp("timestamp", { useTz: false }).notNull();
		table.specificType("transportid", "CHAR(36)").notNull();
		table.specificType("sfustreamid", "CHAR(36)").notNull();
		table.string("rtppadid", 255).notNull();
		table.bigInteger("ssrc").notNull();
		table.bigInteger("bytesreceived");
		table.specificType("callid", "CHAR(36)");
		table.specificType("clientid", "CHAR(36)");
		table.integer("clockrate");
		table.integer("fecpacketsdiscarded");
		table.integer("fecpacketsreceived");
		table.integer("fircount");
		table.text("fractionlost");
		table.integer("framesdecoded");
		table.integer("framesreceived");
		table.boolean("internal");
		table.text("jitter");
		table.integer("keyframesdecoded");
		table.text("marker");
		table.text("mediatype");
		table.text("mimetype");
		table.integer("nackcount");
		table.integer("packetsdiscarded");
		table.integer("packetsduplicated");
		table.integer("packetsfaileddecryption");
		table.integer("packetslost");
		table.integer("packetsreceived");
		table.integer("packetsrepaired");
		table.integer("payloadtype");
		table.integer("plicount");
		table.string("remotertppadid", 255);
		table.string("remotesfuid", 255);
		table.string("remotesinkid", 255);
		table.string("remotetransportid", 255);
		table.text("rid");
		table.text("roundtriptime");
		table.integer("rtcprrsent");
		table.integer("rtcpsrreceived");
		table.integer("rtxpacketsdiscarded");
		table.integer("rtxpacketsreceived");
		table.bigInteger("rtxssrc");
		table.text("sdpfmtpline");
		table.integer("slicount");
		table.integer("targetbitrate");
		table.specificType("trackid", "CHAR(36)");
		table.boolean("voiceactivityflag");
	});
};