const schemaName = "schema";
const tableName = "sfu_outbound_rtp_pad_report";
exports.up = function (knex) {
	return knex.schema.withSchema(schemaName).createTable(tableName, (table) => {
		table.string("serviceid", 255).notNull();
		table.string("mediaunitid", 255).notNull();
		table.specificType("sfuid", "CHAR(36)").notNull();
		table.timestamp("timestamp", { useTz: false }).notNull();
		table.specificType("transportid", "CHAR(36)").notNull();
		table.specificType("sfustreamid", "CHAR(36)").notNull();
		table.specificType("sfusinkid", "CHAR(36)").notNull();
		table.string("rtppadid", 255).notNull();
		table.bigInteger("ssrc").notNull();
		table.bigInteger("bytessent");
		table.specificType("callid", "CHAR(36)");
		table.specificType("clientid", "CHAR(36)");
		table.integer("clockrate");
		table.integer("fecpacketsdiscarded");
		table.integer("fecpacketssent");
		table.integer("fircount");
		table.integer("framesencoded");
		table.integer("framessent");
		table.boolean("internal");
		table.integer("keyframesencoded");
		table.text("marker");
		table.text("mediatype");
		table.text("mimetype");
		table.integer("nackcount");
		table.integer("packetsdiscarded");
		table.integer("packetsduplicated");
		table.integer("packetsfailedencryption");
		table.integer("packetslost");
		table.integer("packetsretransmitted");
		table.integer("packetssent");
		table.integer("payloadtype");
		table.integer("plicount");
		table.text("rid");
		table.text("roundtriptime");
		table.integer("rtcprrreceived");
		table.integer("rtcpsrsent");
		table.integer("rtxpacketsdiscarded");
		table.integer("rtxpacketssent");
		table.bigInteger("rtxssrc");
		table.text("sdpfmtpline");
		table.integer("slicount");
		table.integer("targetbitrate");
		table.specificType("trackid", "CHAR(36)");
		table.boolean("voiceactivityflag");
	});
};